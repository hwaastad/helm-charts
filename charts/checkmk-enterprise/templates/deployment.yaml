apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "checkmk-enterprise.fullname" . }}
  labels:
{{ include "checkmk-enterprise.labels.standard" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "checkmk-enterprise.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "checkmk-enterprise.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{- if eq .Values.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: {{ template "checkmk-enterprise.name" . }}
{{- else if eq .Values.podAntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ template "checkmk-enterprise.name" . }}
{{- end }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      initContainers:
      - name: {{ .Chart.Name }}-init
        command: ["/bin/bash", "/docker-entrypoint-init.sh"]
        env:
        - name: CMK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "checkmk-enterprise.fullname" . }}
              key: checkmk-password
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        volumeMounts:
        - name: storage
          mountPath: /omd/sites
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: true
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        volumeMounts:
          - mountPath: /omd/sites
            name: storage
        env:
        - name: CMK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "checkmk-enterprise.fullname" . }}
              key: checkmk-password
        - name: AUTOMATION_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "checkmk-enterprise.fullname" . }}
              key: checkmk-automation-secret
        - name: SNOW_MID_PASSWD
          valueFrom:
            secretKeyRef:
              name: {{ include "checkmk-enterprise.fullname" . }}
              key: servicenow-password
        - name: DEFAULT_SNMP_COMMUNITY
          valueFrom:
            secretKeyRef:
              name: {{ include "checkmk-enterprise.fullname" . }}
              key: checkmk-default-snmp-community
        - name: SNOW_MID_URL
          value: {{ .Values.servicenow.url | quote }}
        - name: SNOW_MID_USER
          value: {{ .Values.servicenow.username | quote }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: storage
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "checkmk-enterprise.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
