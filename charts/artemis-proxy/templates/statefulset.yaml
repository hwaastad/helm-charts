apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "artemis-proxy.fullname" . }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
  labels:
{{ include "artemis-proxy.labels.standard" . | indent 4 }}
spec:
  serviceName: {{ include "artemis-proxy.fullname" . }}
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 10
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app: {{ template "artemis-proxy.name" . }}
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      name: {{ include "artemis-proxy.fullname" . }}
      annotations:
{{ toYaml .Values.replica.annotations | indent 8 }}
      labels:
        app: {{ template "artemis-proxy.name" . }}
        release: {{ .Release.Name | quote }}
    spec:
      imagePullSecrets:
        - name: daxdigital
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app: {{ template "artemis-proxy.name" . }}
                release: {{ .Release.Name | quote }}
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ template "artemis-proxy.name" . }}
                  release: {{ .Release.Name | quote }}
        {{- end }}
      strategy:
        type: Recreate
      initContainers:
      - name: configure-cluster
        image: {{ template "artemis-proxy.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["/bin/sh", "/opt/configure-common/configure-cluster.sh"]
        volumeMounts:
          - name: config-override
            mountPath: /var/lib/artemis/etc-override
          - name: configure-common
            mountPath: /opt/configure-common
        env:
        - name: TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "artemis-proxy.fullname" . }}
              key: truststore-password
        - name: SECURE
          value: {{ .Values.security.enabled | quote }}
        - name: ARTEMIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "artemis-proxy.fullname" . }}
              key: artemis-password
        - name: ARTEMIS_USERNAME
          value: {{ default "artemis" .Values.artemisUser | quote }}
      containers:
      - name: {{ include "artemis-proxy.fullname" . }}
        image: {{ template "artemis-proxy.image" . }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: ARTEMIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "artemis-proxy.fullname" . }}
              key: artemis-password
        - name: ARTEMIS_USERNAME
          value: {{ default "artemis" .Values.artemisUser | quote }}
        - name: ARTEMIS_PERF_JOURNAL
          value: {{ default "AUTO" .Values.persistence.testJournalPerformance | quote }}
        ports:
        - name: http
          containerPort: 8161
        - name: core
          containerPort: 61616
        - name: amqp
          containerPort: 5672
        - name: jmxexporter
          containerPort: 9404
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /var/lib/artemis/data
        - name: config-override
          mountPath: /var/lib/artemis/etc-override
        - name: configure-common
          mountPath: /opt/configure-common
      volumes:
      - name: config-override
        emptyDir: {}
      - name: configure-common
        configMap:
          name: {{ include "artemis-proxy.fullname" . }}-configure-common
      {{- if .Values.persistence.enabled }}
      {{- else }}
      - name: data
        emptyDir: {}
      {{- end -}}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ include "artemis-proxy.fullname" . }}
        release: {{ .Release.Name | quote }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}

      {{- if .Values.persistence.storageClass }}
          storageClassName:  {{ .Values.persistence.storageClass | quote }}
      {{- end }}
  {{- end -}}
